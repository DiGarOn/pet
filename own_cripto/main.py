import random

import alberty.solution as alb

DISK = "абвгдежзийклмнопрстуфхцчшщъыьэюя"
DISK = DISK.upper()
DISK = list(DISK)
NUMBERS = [1, 2, 3, 4, 5, 6, 7, 8]


def split_by_3(text: str):
    list_text = []
    while len(text) % 3 != 0:
        text += " "
    for i in range(0, len(text), 3):
        list_text.append(text[i: i + 3])
    return list_text


def generate_key():
    global DISK, NUMBERS
    return [random.choice(DISK), random.choice(NUMBERS)]


def get_private_disk(key, DISK):
    ind = key[1]
    res = DISK
    while ind < len(DISK):
        res.insert(0, res[ind])
        res.pop(ind + 1)
        ind = ind + key[1] + 1
    return res


def encript(text):
    global DISK
    list_text = split_by_3(text)
    res = ''
    keys = []
    private_disk = DISK.copy()

    for i in list_text:
        key = generate_key()
        keys.append(key)
        private_disk = get_private_disk(key, private_disk)
        while private_disk[0] != key[0]:
            private_disk = alb.rotate_for(private_disk)
        for j in i:
            if j in DISK:
                res += private_disk[DISK.index(j)]
                if ord(key[0]) * key[1] % 2 == 0:
                    private_disk = alb.rotate_for(private_disk, key[1])
                else:
                    private_disk = alb.rotate_up(private_disk, key[1])
            else:
                res += j
    return (res, keys)


def decript(text, keys):
    list_text = split_by_3(text)
    res = ''
    k = 0
    private_disk = DISK.copy()
    for i in list_text:
        private_disk = get_private_disk(keys[k], private_disk)
        while private_disk[0] != keys[k][0]:
            private_disk = alb.rotate_for(private_disk)
        for j in i:
            if j in DISK:
                res += DISK[private_disk.index(j)]
                if ord(keys[k][0]) * keys[k][1] % 2 == 0:
                    private_disk = alb.rotate_for(private_disk, keys[k][1])
                else:
                    private_disk = alb.rotate_up(private_disk, keys[k][1])
            else:
                res += j
        k += 1

    return res


def main():
    text = '...Отмечается тенденция к увеличению в зарубежных средствах мас- совой' \
           ' информации объема материалов, содержащих предвзятую оценку государственной' \
           ' политики Российской Федерации. Российские средства массовой информации' \
           ' зачастую подвергаются за рубежом откровенной дискриминации, российским' \
           ' журналистам создаются препятствия для осуществления их профессиональной деятельности...'
    enc_text, key = encript(text.upper())
    print(enc_text)
    print('________________________________________________________________________')
    print(decript(enc_text, key))
    print('________________________________________________________________________')

    text_1 = 'Что, дурно? все, что происходит - происходит от слабости \n' \
             'По истине ловок тот, кто умеет скрывать свою ловкость (Ларуш фуку «максима и моральные размышления») \n' \
             'Человек - это животное, заключающее сделки. Ни одно другое животное этого не делает. Ни одна собака не меняется костью с другой (Адам смит «исследования о природе и причинах богатства народов) \n' \
             'Не следует обижаться на людей, утаивших от нас правду. Мы и сами постоянно утаиваем ее от себя  (Ларуш фуку «максима и моральные размышления») \n' \
             'Ад - это другие (жан поль сартер «за закрытыми дверями») \n' \
             'Есть два рода лжи. Ложь на деле которая относится к прошлому и ложь в помысле, касающаяся будущего (жан жак Россо «Эмиль или о воспитании»)'
    enc_text_1, key_1 = encript(text_1.upper())
    print(enc_text_1)
    print('________________________________________________________________________')
    print(decript(enc_text_1, key_1))
    print('________________________________________________________________________')

    text_2 = 'Услужливый дурак опаснее врага. (Жан де-ло-фа-тен (басни)\n' \
             'Оставь надежду, всяк сюда входящий (Данте аллигири ад-3я песня стих 9й)\n' \
             'Человек обречён на свободу (жан поль сартер «экзистенциализм- это гуманизм»)\n' \
             'Каждый человек несёт в самом себе самого опасного из предателей (сюрен обе кюркегор. «Дело любви»)\n' \
             'Но то, что люди обычно называют судьбой, по большей части лишь их собственные глупые выходки (Шопенгауэр «Порерго унд полерофомена» «маленькие философские зарисовки»)\n' \
             'Гений стоит всего в шаге от безумства (Шопенгауэр «приложения и добавления» )\n' \
             'Антрополог Эдвард Холл разделял личное пространство на 4 зоны. Одно из них является интимной зоной, внутри которой есть ближний область. На таком расстоянии можно обнять человека. Другим нельзя в эту зону, впрочем бывают и исключения '
    enc_text_2, key_2 = encript(text_2.upper())
    print(enc_text_2)
    print('________________________________________________________________________')
    print(decript(enc_text_2, key_2))
    print('________________________________________________________________________')

    text_3 = '«Почему я так редко вижу тебя?» - потому что слова «почему я так редко вижу тебя?»  слаще для моего слуха, чем слова: «Зачем ты снова явился?»(караван снов)\n' \
             'Любовь никогда не умирает от голода, но ее часто убивает пересыщенность \n' \
             'А вообще все хорошо, я люблю обедать в одиночестве. И тусоваться люблю. Один.\n' \
             'Каждый может разозлиться - это легко; но разозлиться на того, на кого нужно, и настолько, насколько нужно, и тогда, когда нужно, и по той причине, по которой нужно, и так, как нужно, - это дано не каждому.(Аристотель. Никомахова этика)\n' \
             'Вот мой секрет, он очень прост: зорко одно лишь сердце. Самого главного глазами не увидишь.*(Антуан де Сент-Экзюпери. Маленький принц)'
    enc_text_3, key_3 = encript(text_3.upper())
    print(enc_text_3)
    print('________________________________________________________________________')
    print(decript(enc_text_3, key_3))
    print('________________________________________________________________________')

if __name__ == '__main__':
    main()

